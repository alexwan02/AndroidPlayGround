apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    defaultConfig {
        applicationId rootProject.ext.applicationId
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile project(':corelib')
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    compile "com.android.support:appcompat-v7:$rootProject.ext.appcompatV7Version"
    compile "com.android.support:design:$rootProject.ext.supportDesignVersion"
    compile "com.android.support:support-v4:$rootProject.ext.supportV4Version"
    compile "com.android.support.constraint:constraint-layout:$rootProject.ext.constraintLayoutVersion"
    testCompile "junit:junit:$rootProject.ext.jUnitVersion"
    androidTestCompile("com.android.support.test:runner:$rootProject.ext.supportTestVersion") {
        exclude module: 'support-annotations'
    }
    androidTestCompile("com.android.support.test.espresso:espresso-core:$rootProject.ext.espressoVersion") {
        exclude module: 'support-annotations'
    }

    annotationProcessor "com.google.dagger:dagger-compiler:$rootProject.ext.dagger2Version"
}
